plugins {
    id 'java-library'
    id "maven-publish"
    id "idea"
    id 'signing'
    id 'com.palantir.git-version' version '3.0.0'
}

group 'io.github.pesegato'
version gitVersion()

println("version : '${version}'")

ext {
    jvm = org.gradle.internal.jvm.Jvm.current()
    javaVersion = JavaVersion.current()
    isCiServer = System.getenv("TRAVIS") || System.getenv().containsKey("TEAMCITY_VERSION") || hasProperty('CI') || System.getenv("JITPACK")
    isWindows = org.gradle.internal.os.OperatingSystem.current().windows
}

repositories {
    mavenCentral()
}

def jme3 = ["v" : '3.4.0-stable', "g": "org.jmonkeyengine"]
def pesegato = ["g" :"com.pesegato" ,"v":"latest.integration"]
if (isCiServer){
    pesegato.g="com.github.Pesegato"
    pesegato.v="-SNAPSHOT"
}

dependencies {
    // jme
    implementation "${jme3.g}:jme3-core:${jme3.v}"
    implementation 'org.slf4j:slf4j-api:1.7.21'
    implementation 'io.github.pesegato:GoldMonkey:0.7.4'
    implementation 'com.google.code.gson:gson:2.7'

    //Those are jme3 additional library uncomment the ones you need
    //compile "org.jmonkeyengine:jme3-android-native:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-android:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-bullet-native-android:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-blender:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-bullet-native:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-bullet:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-effects:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-jogg:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-jogl:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-lwjgl3:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-networking:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-plugins:$jmeVersion"
    //compile "org.jmonkeyengine:jme3-terrain:$jmeVersion"

    //You need to uncomment nifty repository in the repositories section if you use this dependency
    //compile "org.jmonkeyengine:jme3-niftygui:$jmeVersion"

}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'GibbonDice'
                description = 'RNG utilities for jMonkeyEngine'
                url = 'https://github.com/Pesegato/GibbonDice/'
                inceptionYear = '2017'
                licenses {
                    license {
                        name = 'BSD 3-Clause License'
                        url = 'https://github.com/Pesegato/GibbonDice/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'pesegato'
                        name = 'Pesegato Ameiurus Melas'
                        email = 'pesegato@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pesegato/gibbondice.git'
                    developerConnection = 'scm:git:ssh://git@github.com/pesegato/gibbondice.git'
                    url = 'https://github.com/Pesegato/GibbonDice/'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.doLast {
    def buildDate = new Date().format('yyyy-MM-dd HHmm')
    println "Writing ${rootProject.name}.build.date: " + buildDate
    destinationDirectory.file("${rootProject.name}.build.date").get().asFile.text = buildDate
    destinationDirectory.file("${rootProject.name}.build.version").get().asFile.text = "${version}"
}